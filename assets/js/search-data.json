{
  
    
        "post0": {
            "title": "Professional Experience in a Personal World",
            "content": "Photo by SpaceX on Unsplash . Elon Musk is known for many things. CEO of Tesla. The world’s richest man. Buzzworthy tweets. But it is a lesser-known fact that he is a highly motivated self-learner and a polymath who believes in diving deep into the subjects of his interest and mastering them on his own. Musk unknowingly serves as an antithesis to the pressing issue of the glorification of ineffective professional experience in the job sector, which has bred a gatekept industry with unreasonable recruitment policies. In this article, I unearth this traditional policy and suggest some possible alternatives for companies and job-seeking students. . According to a recent study by LinkedIn in 2021, nearly 35% of entry-level positions demanded at least three years of experience with relevant technologies. This seems counterintuitive, given that entry-level jobs are geared towards fresh graduates with limited professional experience. Yet, these positions often deal with high-level professional tasks that inexperienced graduates are not equipped to handle. . Internships do exist to expose students to the job sector by training them to attain real-world problem-solving competencies and helping them gain professional experience. However, these internships paradoxically require experience as a prerequisite too. Additionally, inexperienced interns are often relegated to busywork instead of being trained to acquire the necessary problem-solving skills. Overall, entering this gatekept professional industry has now become a herculean task. . Many studies show that professional experience has little to no correlation to job performance. According to the Harvard Business Review, there is a 13% correlation between professional experience and true job performance. Similarly, researchers at the New York University found that prior experience showed no relation to job performance. . Companies are not the only ones to be blamed here. For instance, the rapidly changing nature of technology causes many job seekers to flock towards learning newer frameworks, rather than mastering older technologies which corporates continue to use. As a result, these developers are unable to procure jobs at these companies due to a mismatch of skillsets. . In essence, the ouroboric nature of this gatekeeping suggests a vicious cycle of increasing requirements of experience and providing limited avenues for gaining such experience. Companies need to realise that glorifying professional experience and gatekeeping the industry is not sustainable in the long run. Denying newcomers opportunities will limit the companies from hiring fresh talent. . So, how can the corporate world shift its approach? What strategies can be employed by both those offering jobs as well as those seeking them to reach a common ground that is beneficial to both the parties? . Companies need to adopt a multimodal and strategic approach to gauge the skills, passions, and attitudes of applicants. For example, tests, courses and even simulation exercises or situational judgement tests challenges can be used to evaluate skill and ability. Identifying the applicants’ hobbies and interests to evaluate their compatibility with the company could be another option, since a cultural fit is crucial for team-based activities. Experiences such as team sports can also be used to recognize teamwork and leadership competencies. . Identifying students and training them from a young age is another option, especially if they receive mentorship under industry professionals. In this way, students get hands-on experience in problem-solving and decision-making under the guidance of professionals and achieve dexterity in these tasks. Schools and colleges can tie-up with several corporate and research organizations for their students to enrol in externships and apprenticeship programmes that deal with legitimate problems of the corporate and research sector. . But what about the students? What can they do to stand out? . Students can seize opportunities to gain exposure in their fields of interest. They can volunteer at charity organisations requiring volunteers with a very particular set of skills. Many charities adopt corporate practices and the first-hand experience gained here can help students demonstrate their ability and passions effectively. Students can also learn new languages to stand out to multinational corporations and work as freelancers on similar jobs to further boost their profile. . In addition, students can undertake personal projects that display their innovation, creativity, passion, and capability. Professional jobs pale in comparison to such projects due to rigid structures employed in professional settings, forsaking innovation for mundane high-pressure work. These personal projects can uplift students by building on their talent as well as their ingenuity, and students can engage in creative problem-solving that is many times restricted in a corporate setting. . In the end, knowledge is worthless without experience, but professional experience need not be glorified to assess knowledge. After all, as internationally acclaimed author and journalist Malcolm Gladwell said in his book, Outliers, “Practice isn’t the thing you do once you’re good, it’s the thing that you do that makes you good.” .",
            "url": "https://blog.prannaya.tech//writing/2022/04/17/Professional-Experience-in-a-Personal-World.html",
            "relUrl": "/writing/2022/04/17/Professional-Experience-in-a-Personal-World.html",
            "date": " • Apr 17, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Finding Success in Research",
            "content": "Photo by Annie Sprat on Unsplash . Reading the title, you must be thinking: “what does a high-schooler in a country like Singapore know about research?”. And you’d be right. I don’t know everything about research. I don’t understand some complex paper titles and I’m certainly unable to read them. But that’s besides the point. . My First Research Project . A while back, I took part in a small research project. At that time, I was just starting Secondary 3, otherwise known as the 9th grade, at NUS High School, and I was extremely nervous. Seniors had always warned me that Secondary 3, or Year 3, as we call it, was the worst year of our 6-year high-school experience. . And so, when I started to take part in that research project, I was decidedly apprehensive. While we did have the option of taking a research-related module in our course curriculum back in Year 2, I had pass on that in favour of a Math module, where we learnt some interesting stuff like LaTeX and what, at that moment, I didn’t know was known as mathematical research. I had no experience with creating research posters, or writing realistic research papers. I had nothing. . But that wasn’t the only thing. . While we were deciding a project, we came across a relatively mundane project, which combined some of the interests that my groupmates, who unlike me hated Computer Science and coding, and my own. The problem was that the project required experience with Machine Learning. Whereas I was slightly familiar with Data Analytics modules like Numpy and Matplotlib at the time, I was nowhere near the level of a professional Data Analyst. . I had been getting myself involved in GUI Development with Python at the time, spending my entire December Holidays on what was but a slightly functional PyCharm clone, but that was before our school brought us into what I like to call the ‘Brown Ages’. . The Brown Ages . The ‘Brown Ages’ represented the two semesters wherein our school really went all in to teach us, wait for it… Java. Java, in my opinion, is still one of the worst languages I’ve ever learnt, to the point that I’d rather code shell scripts than Java. Whereas I started to warm up to the language over the course of Year 3, my respect for the language drops every passing month, especially after witnessing the powers of Scala and Kotlin, which, mind you, are built on the same exact system as Java, that being the Java Virtual Machine (JVM). . The Covid Protocol . But soon, things took a turn for the worse. And maybe for the best. Last year started with a global pandemic that swept many nations of their feet, and thrust most, inclusive of me, into a closed-off situation. Entire schools were shut down, and students like me were left astray, locked into a cramped space with little hope of the future. . But that turned out to be a cloud with silver lining. In the meantime of a month-long lockdown, I participated in the prolific Machine Learning course by Andrew Ng on Coursera, and familiarised myself with many of the most important algorithms in Machine Learning, like the ideas of regression (linear, polynomial, ridge, lasso, logistic), K-Means and even, to some extent, Neural Networks. We learnt all this in MATLAB Octave, which is basically a paid specialized data science language. Python basically managed to duplicate many of the specialized features of MATLAB Octave, with the powerful libraries of numpy and matplotlib , hence explaining the decline in popularity of this language. In summary, it didn’t take long to convert it into Python. . This truly helped me with my research project, but timing was always an issue. I was a victim of poor sleep schedules, catching only 4 hours of sleep daily, and huge amounts of stress, that too besides my research project. So I left it in stasis. For 6 months. . 6 Months Later . I started off relatively inexperienced, and decided to tinker around with a little dataset to find possible patterns. I decided to process the data with Signal Processing algorithms, and decided to look up possible techniques. Unfortunately, my ArXiv reading was relatively poor, and I was left scraping for possible option to code the Fast Fourier Transform (FFT) based algorithms we used in the project. . We came across a paper that did something very similar to us, but it was a bit more complex and the code was written in MATLAB Octave. Although I had learnt MATLAB Octave before, I felt that doing the project in Python would be better. And hence, I spent a whole gruesome week converting and debugging the code, continuously and incessantly. It was absolutely terrible, but ultimately it helped me a lot. . In case you wanted to see, the following was the data we already had: . . Graph of Accelerometer Data as it evolves through time. . And this was what we got after the Signal Processing had been performed: . . Graph of the Postulated Freeze Index Values, the products of the Signal Processing Algorithms. . Week 2 . Following this, with the help of some of my group mates, I was able to find out that Support Vector Machines (SVMs) would be the most efficient Machine Learning model based on the data available. But there was an imminent problem. There were 10 million data points. If we used Scikit-Learn’s SVM utility, we would have to wait for hours and hours of training, possibly days or weeks. We needed to find an efficient form of creating a model. Everything depended on this. . And then I stumbled upon a little contraption called ThunderSVM. ThunderSVM allowed me to do exactly what I wanted: run a non-deep machine learning model on a GPU. And thus, I continued to use ThunderSVM. Until I ran into a problem. I didn’t have a GPU that supported CUDA. Oh god. . So I tried to find a solution. Something that could let me use a GPU which was not on my local computer. And that is when I remembered Google Colaboratory, a software that can allow you to run your notebooks online with a GPU or even a TPU. I had previously used it in another such research-like Time Series Machine Learning project. . Flashback: 3 Months Ago . There was once a little kid named Prannaya, who decided to be very dumb. He was over-committed and was dying of Bio and yet he decided to predict Covid-19 um. . Indeed, I decided to predict Covid-19 patterns to predict the trajectory. Using the statsmodels API ARIMA function SARIMAX , Facebook’s Prophet API and Double Exponential Smoothing, I had to code. . Problem was that Jupyter Notebook wasn’t working on my laptop at the time, so I had to find another more usable platform. Hence came in Google Colab. I had been training the model for a whole week throughout the September Holidays, making them what was otherwise a project-work filled nightmare now an surprisingly terrible nightmarish hellscape. But I digress. . I wish it was over. . I guess I managed to make the model train for a while and eventually it was giving substantial results. The data can be seen below: . . We continued to find better results, but by a certain point, the above was the best data we had. We went with it. And that was it. The project was over. My suffering was over. Or so I thought. You see, even as I stared at that plot in a Colab Notebook, with a sort of bliss in my heart, I was yet to find out that there was something waiting ahead… Something that would change the course of everything. .",
            "url": "https://blog.prannaya.tech//research/2021/08/21/Finding-Success-in-Research.html",
            "relUrl": "/research/2021/08/21/Finding-Success-in-Research.html",
            "date": " • Aug 21, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Introducing Face",
            "content": "Our Rationale . FACE, or Facial-recognition AI for Communicating Emotions, is an AI Project built as part of the Building BloCS 2021 Event AIWinpetition. This is an AI project for visual sentiment analysis based on the audiences’ face. . This application has been built off against the theme of “Inspired by Hollywood”. An unfortunate situation in Hollywood, and by extension the entire world, is the apparent lack of transparency. While one might say the opaqueness gives one a sense of security and the feeling of personal space, this becomes abundantly problematic with Peer Pressure and Societal Expectations. . Imagine a world where no one hides their emotions. Everyone is 100% transparent with one another, and no one lies. While such a world may only seem to exist in concept films like The Invention of Lying and short videos by Ryan George, the truth is that this world yields certain benefits, benefits which may affect how one works or adapts to the situation. . Take a simple example of a project at school, where one person is doing all the work while the rest slack. Now, the person can either say the complete truth and express his discomfort or hide his emotions and work on the entire project, wasting his time in the process. As the situation is, you can’t really be rooting for the option of hiding your emotions, can you? But 99% of the time, that is what the person would do, because they don’t want to be misjudged or looked at in a negative light. The societal perceptions and pressures become a bane to their very honesty. . A macroscopic example of this comes in the form of movie reviews. Critics may choose to be less harsh on a movie if they don’t want to make the director and the cast feel bad, and that is the reason that honest reviews are needed more than ever now. But that’s the problem. You can’t get honest reviews easily. Hiding your emotions will always take over. That’s why FACE was made. . FACE aims to fix this problem, by enabling a facial recognition-based sentiment analysis system. Simply put, it takes in your FACE and classifies it using a CNN to a certain emotion. That is how you felt during the encounter. This allows directors to quickly gauge how one’s feeling and engagement regarding a movie, so that they can work to tie up loose ends. It’s essentially allowing the director to fill the audience members’ shoes and understand how things work from their perspective. This technology being online also allows sentiment analysis on online platforms similar to Zoom, which makes being in the same room not as important. A possible option that arises from that is lie detection, especially during interviews. . All in all, this application will be an indispensable tool for moviemakers facing problems with getting honest feedback about their productions through text. With FACE, they will be able to view their audiences’ reactions and will get essential information to improve their movie production, using deep learning! This technology aims to allow not only you, but everyone around you, to express yourselves as you are, not as society wants you to be. Didn’t like Captain Marvel? You can be vocal about it, don’t worry. We are with you every step of you to help you FACE your fears. . Our Model . We trained a Convolutional Neural Network (CNN) against a dataset that we had with us. We trained the CNN, which was developed via the following prototype emotion model code written in TensorFlow Keras with Python: . . The model takes in a grayscale version of the image and returns the probability function. This was as part of our research, where previous papers and examples showed this to be the most accurate model found so far. We then used an Adam optimizer with a learning rate of 0.0001 and decay of 10-6, basing our training system on the accuracy of the model. Over 50 epochs, we were able to get a final product with training accuracy of 87.02% and validation accuracy (testing accuracy) of 62.83%. . Software Development . Following the development of our model, we went ahead to separate our system into two separate segments: a Desktop Client coded in Tkinter with Python and a Web Client coded in Flask with Python and HTML. . The Desktop Client . Our desktop accesses the Webcam footage of a user to analyze faces and, based off each face, run it through the CNN. The CNN returns a dictionary containing the probability of each emotion being the case. To make the User Interface simpler for the user, our desktop client only displayed the most likely emotion. This emotion is displayed along with a rectangle that is displayed on top of the face, as found by OpenCV. The following is the simplistic UI of the Desktop Client: . The Web Client . The web client, developed with the Flask Web Framework, was developed as a prototype due to time constraints and the difficulty of integrating the front-end of the web application with the backend. The prototype captures the essence of FACE and utilises the CNN to its best ability. A user-friendly web interface first asks you to take a photo of yourself or upload a pre-existing photo which is saved as a .jpg or .png file. Following this, the analyzer can be used by clicking on the link provided and pressing a button shown, prompting one to select the image from the hard drive. Following this, pressing the submit button allows the website to run the image through the CNN model, allowing it to guess your emotion based on a facial expression. Although simplistic, under the hood lies a great Machine Learning model with a lot of untapped potential, which we believe sets it apart from other metrics. . . Figure: Analyzer Page . . Figure: Classification Page . . Figure: README .",
            "url": "https://blog.prannaya.tech//2021/06/12/Introducing-FACE.html",
            "relUrl": "/2021/06/12/Introducing-FACE.html",
            "date": " • Jun 12, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Welcome to my personal blog. . My name is Prannaya Gupta, and I am a student at NUS High School of Mathematics and Science. I am majoring in Computer Science, Physics, Mathematics and Chemistry, with optional Honours in Computer Science and Computer Engineering at the National University of Singapore (NUS). I am part of the Physics Olympiad Team of NUS High, and I am also the Club Director of the NUS High Astronomy Club and Events In-Charge and an Executive Committee Member of the NUS High Computer Science Interest Group, AppVenture. I am also a member of the Physics Interest Group, Quanta and Math Interest Group of NUS High. . I am experienced in research, having heralded 4 different projects from multiple disciplines, ranging for theoretical physics to deep learning and artificial intelligence. Many of these projects have been completed with reputable individuals from distinguished institutes and organisations like the National University of Singapore (NUS), the Singapore University of Technology and Design (SUTD), and NuSpace. .",
          "url": "https://blog.prannaya.tech//about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://blog.prannaya.tech//robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}